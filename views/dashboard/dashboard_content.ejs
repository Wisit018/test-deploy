<style>
    body {
        margin: 0;
        padding: 0;
        background-color: #f8f9fa;
    }
    .dashboard-container {
        background-color: white;
        padding: 15px 30px;
        margin: 0 auto;
        max-width: 1400px;
    }
    .search-summary-bar {
        background: #f5f5f5;
        padding: 10px 15px;
        margin: 0 0 15px 0;
        display: flex;
        align-items: center;
        gap: 15px;
        flex-wrap: nowrap;
        border-bottom: 1px solid #ddd;
        border-radius: 4px;
    }
    .search-box {
        flex: 0 0 300px;
    }
    .search-box input {
        width: 100%;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-radius: 3px;
        font-size: 13px;
    }
    .search-box input:focus {
        outline: none;
        border-color: #999;
    }
    .summary-info {
        display: flex;
        align-items: center;
        gap: 5px;
        flex: 1;
        font-size: 14px;
        color: #333;
        font-weight: normal;
    }
    .summary-value {
        font-weight: bold;
        color: #333;
        font-size: 14px;
    }
    .data-table-section {
        background: white;
        border: 1px solid #ddd;
        margin: 0 0 15px 0;
        border-radius: 4px;
        overflow: hidden;
    }
    .data-table-section table {
        width: 100%;
        border-collapse: collapse;
        font-size: 12px;
    }
    .data-table-section th {
        background: #f8f9fa;
        padding: 8px;
        text-align: left;
        border: 1px solid #ddd;
        font-weight: 600;
        font-size: 11px;
        color: #333;
    }
    .data-table-section td {
        padding: 6px 8px;
        border: 1px solid #ddd;
    }
    .data-table-section tbody tr:hover {
        background-color: #f0f8ff;
        cursor: pointer;
    }
    .data-table-section tbody tr.selected {
        background: #e3f2fd;
    }
    .detail-form-section {
        background: white;
        border: 1px solid #ddd;
        padding: 15px;
        margin: 15px 0;
        border-radius: 4px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }
    .detail-layout {
        display: grid;
        grid-template-columns: 300px 1fr;
        gap: 15px;
    }
    .detail-left {
        border-right: 1px solid #ddd;
        padding-right: 15px;
    }
    .detail-right {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }
    .form-field {
        display: flex;
        align-items: center;
        margin-bottom: 8px;
    }
    .form-field label {
        width: 100px;
        margin: 0;
        font-size: 12px;
        font-weight: 500;
        flex-shrink: 0;
    }
    .form-field input,
    .form-field select,
    .form-field textarea {
        flex: 1;
        border: 1px solid #ccc;
        padding: 4px 8px;
        font-size: 12px;
        border-radius: 2px;
    }
    .form-field input[readonly] {
        background-color: #f9f9f9;
    }
    .form-row-inline {
        display: flex;
        gap: 10px;
        margin-bottom: 8px;
    }
    .form-row-inline .form-field {
        flex: 1;
        margin-bottom: 0;
    }
    .form-row-inline .form-field label {
        width: auto;
        margin-right: 5px;
    }
    .detail-right-top {
        display: flex;
        flex-direction: column;
        gap: 0;
    }
    .form-field-small {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    .form-field-small label {
        font-size: 11px;
        margin: 0;
        white-space: nowrap;
    }
    .form-field-small input {
        width: 60px;
        border: 1px solid #ccc;
        padding: 3px 6px;
        font-size: 11px;
    }
    #relatedItemsContainer {
        max-height: 200px;
        overflow-y: auto;
    }
    .badge-small {
        padding: 2px 6px;
        font-size: 11px;
        border-radius: 3px;
        display: inline-block;
        color: #333;
        font-weight: 500;
    }
    .badge-SEM { 
        background-color: #e3f2fd;
        color: #333;
    }
    .badge-SHOPEE { 
        background-color: #ffe0e0;
        color: #333;
    }
    .badge-LAZADA { 
        background-color: #e8eaf6;
        color: #333;
    }
    .badge-default { 
        background-color: #f5f5f5;
        color: #333;
    }
    .text-truncate-td {
        max-width: 200px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    .export-section button:hover {
        opacity: 0.9;
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        transition: all 0.2s ease;
    }
    .export-section button:active {
        transform: translateY(0);
        box-shadow: 0 1px 2px rgba(0,0,0,0.2);
    }
    .export-section button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    #datePreviewTable tbody tr:hover {
        background-color: #f0f8ff !important;
    }
    #datePreviewContainer {
        animation: fadeIn 0.3s ease-in;
    }
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<script>
// Define all global variables and functions BEFORE any HTML uses them
var deliveriesData = [];
var selectedDeliveryData = null;

// Function to select row by index
function selectRow(index) {
    console.log('selectRow called with index:', index);
    
    if (!deliveriesData || deliveriesData.length === 0) {
        console.error('No deliveries data available');
        return;
    }
    
    // Remove selected class from all rows
    var table = document.getElementById('deliveriesTable');
    if (!table) {
        console.error('Table not found');
        return;
    }
    
    var tbody = table.getElementsByTagName('tbody')[0];
    var rows = tbody.getElementsByTagName('tr');
    for (var i = 0; i < rows.length; i++) {
        rows[i].classList.remove('selected');
    }
    
    // Add selected class to clicked row
    if (rows[index]) {
        rows[index].classList.add('selected');
    }
    
    // Get delivery data
    var delivery = deliveriesData[index];
    if (!delivery) {
        console.error('Delivery not found at index:', index);
        return;
    }
    
    // Prepare delivery data (keep full object for CSV export)
    var deliveryData = delivery;

    selectedDeliveryData = deliveryData;
    
    console.log('=== Delivery Data ===');
    console.log('customerid:', deliveryData.customerid);
    console.log('mediadesc:', deliveryData.mediadesc);
    console.log('channeldes:', deliveryData.channeldes);
    
    // Load customer details first, then generate content with data
    loadCustomerDetailsAndRender(deliveryData);
}

// Load customer details and render
function loadCustomerDetailsAndRender(deliveryData) {
    console.log('🔄 Loading customer details and rendering...');
    
    if (!deliveryData.customerid) {
        console.log('⚠️ No customerid, rendering without customer data');
        var detailContent = generateDetailContent(deliveryData, null);
        document.getElementById('detailContent').innerHTML = detailContent;
        loadRelatedDeliveries(deliveryData.delivernum);
        return;
    }
    
    var url = '/dashboard/api/customer-details?customerid=' + encodeURIComponent(deliveryData.customerid);
    console.log('📡 Fetching customer from:', url);
    
    fetch(url)
        .then(function(response) {
            console.log('📥 Response status:', response.status);
            if (!response.ok) {
                throw new Error('HTTP error! status: ' + response.status);
            }
            return response.json();
        })
        .then(function(result) {
            console.log('✅ Customer data received:', result);
            var customerData = result.success && result.data ? result.data : null;
            
            // Generate content with customer data
            var detailContent = generateDetailContent(deliveryData, customerData);
            document.getElementById('detailContent').innerHTML = detailContent;
            console.log('✅ Detail content rendered with customer data');
            
            // Load related deliveries
            loadRelatedDeliveries(deliveryData.delivernum);
        })
        .catch(function(error) {
            console.error('❌ Error loading customer details:', error);
            // Render without customer data
            var detailContent = generateDetailContent(deliveryData, null);
            document.getElementById('detailContent').innerHTML = detailContent;
            loadRelatedDeliveries(deliveryData.delivernum);
        });
}

// Generate detail form content
function generateDetailContent(data, customerData) {
    // Escape HTML to prevent display issues
    function escapeHtml(text) {
        if (!text) return '';
        var map = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#039;'
        };
        return String(text).replace(/[&<>"']/g, function(m) { return map[m]; });
    }
    
    return '<div class="detail-layout">' +
        '<div class="detail-left">' +
        '<div class="form-field"><label>อาการ :</label><input type="text" value="' + escapeHtml(data.symptom || '') + '" readonly></div>' +
        '<div class="form-field"><label>ระดับความปวด :</label><input type="text" value="' + escapeHtml(data.urgency || '') + '" readonly></div>' +
        '<div class="form-field"><label>Keyword :</label><input type="text" value="' + escapeHtml(data.mooban2 || '') + '" readonly></div>' +
        '<div class="form-row-inline"><div class="form-field"><label>Follow Up :</label><input type="text" value="' + escapeHtml(data.followupdays || '0') + '" readonly style="width: 40px;"><span style="font-size: 11px;">วัน</span></div></div>' +
        '<div class="form-row-inline"><div class="form-field"><label>วิธีทาน :</label><input type="text" value="0" readonly style="width: 40px;"></div></div>' +
        '<div class="form-field"><label>Remark1 :</label><input type="text" value="' + escapeHtml(data.remark1 || '') + '" readonly></div>' +
        '<div class="form-field"><label>Remark2 :</label><input type="text" value="' + escapeHtml(data.remark2 || '') + '" readonly></div>' +
        '<div class="form-field"><label>Channel :</label><input type="text" value="' + escapeHtml(data.mediadesc) + ' ' + escapeHtml(data.channeldes) + '" readonly></div>' +
        '</div>' +
        '<div class="detail-right">' +
        '<div class="detail-right-top">' +
        '<div style="display: flex; gap: 10px; margin-bottom: 8px; align-items: center;">' +
        '<div class="form-field-small"><label>CustID :</label><input type="text" value="' + escapeHtml(data.customerid) + '" readonly style="width: 120px;"></div>' +
        '<div class="form-field" style="flex: 1;"><label>ชื่อ-นามสกุล :</label><input type="text" value="' + escapeHtml((data.prename || '') + ' ' + (data.firstname || '') + ' ' + (data.lastname || '')).trim() + '" readonly></div>' +
        '</div>' +
        '<div style="display: flex; gap: 10px; align-items: center;">' +
        '<div class="form-field-small"><label>เพศ :</label><input type="text" id="customerSex" name="customerSex" value="' + (customerData && customerData.sex !== null && customerData.sex !== undefined ? escapeHtml(customerData.sex) : '') + '" readonly placeholder="' + (!customerData ? 'ไม่พบข้อมูลลูกค้า' : '') + '"></div>' +
        '<div class="form-field-small"><label>อายุ :</label><input type="text" id="customerAge" name="customerAge" value="' + (customerData && customerData.age !== null && customerData.age !== undefined ? customerData.age : '') + '" readonly placeholder="' + (!customerData ? 'ไม่พบข้อมูล' : '') + '"></div>' +
        '<div class="form-field-small"><label>น้ำหนัก :</label><input type="text" id="customerWeight" name="customerWeight" value="' + (customerData && customerData.weight !== null && customerData.weight !== undefined ? customerData.weight : '') + '" readonly placeholder="' + (!customerData ? 'ไม่พบข้อมูล' : '') + '"><span style="font-size: 10px;">กก.</span></div>' +
        '<div class="form-field-small"><label>สูง :</label><input type="text" id="customerHeight" name="customerHeight" value="' + (customerData && customerData.height !== null && customerData.height !== undefined ? customerData.height : '') + '" readonly placeholder="' + (!customerData ? 'ไม่พบข้อมูล' : '') + '"><span style="font-size: 10px;">ซม.</span></div>' +
        '</div>' +
        '</div>' +
        (!customerData ? '<div style="padding: 10px; background: #fff3cd; border: 1px solid #ffc107; border-radius: 4px; margin: 10px 0; text-align: center;"><strong>⚠️ ไม่พบข้อมูลลูกค้าในระบบ</strong></div>' : '') +
        '<div class="form-field"><label style="width: 100px;">โรคประจำตัว :</label><input type="text" id="customerSickness" name="customerSickness" value="' + (customerData && (customerData.sickness1 || customerData.sickness2) ? escapeHtml(customerData.sickness1 || customerData.sickness2) : '') + '" readonly placeholder="' + (!customerData ? 'ไม่พบข้อมูล' : '') + '"></div>' +
        '<div class="form-field"><label style="width: 100px;">Tag :</label><input type="text" value="" readonly></div>' +
        '<div class="form-field"><label style="width: 100px;">LineID :</label><input type="text" id="customerLineId" name="customerLineId" value="' + (customerData && customerData.lineid ? escapeHtml(customerData.lineid) : '') + '" readonly placeholder="' + (!customerData ? 'ไม่พบข้อมูล' : '') + '"></div>' +
        '<div id="relatedItemsContainer"><p style="padding: 10px; text-align: center; color: #999;">กำลังโหลดรายการสินค้า...</p></div>' +
        '</div>' +
        '</div>';
}

// Load related deliveries
function loadRelatedDeliveries(delivernum) {
    console.log('Loading related deliveries for:', delivernum);
    fetch('/dashboard/api/related-deliveries?delivernum=' + encodeURIComponent(delivernum))
        .then(function(response) { return response.json(); })
        .then(function(result) {
            console.log('Related deliveries result:', result);
            var container = document.getElementById('relatedItemsContainer');
            if (result.success && result.data.length > 0) {
                var relatedTable = generateRelatedDeliveriesTable(result.data);
                if (container) {
                    container.innerHTML = relatedTable;
                    console.log('Related table rendered with', result.data.length, 'items');
                }
            } else {
                if (container) {
                    container.innerHTML = '<p style="padding: 10px; text-align: center; color: #999;">ไม่พบรายการสินค้า</p>';
                }
                console.log('No related deliveries found');
            }
        })
        .catch(function(error) {
            console.error('Error loading related deliveries:', error);
            var container = document.getElementById('relatedItemsContainer');
            if (container) {
                container.innerHTML = '<p style="padding: 10px; text-align: center; color: red;">เกิดข้อผิดพลาดในการโหลดข้อมูล</p>';
            }
        });
}

// Generate related deliveries table
function generateRelatedDeliveriesTable(deliveries) {
    // Escape HTML to prevent display issues
    function escapeHtml(text) {
        if (!text) return '';
        var map = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#039;'
        };
        return String(text).replace(/[&<>"']/g, function(m) { return map[m]; });
    }
    
    var tableRows = deliveries.map(function(delivery) {
        return '<tr>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; font-size: 11px;">' + escapeHtml(delivery.delivernum || '') + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; font-size: 11px;">' + escapeHtml(delivery.code || '') + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; font-size: 11px;">' + escapeHtml(delivery.title || '') + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; text-align: right; font-size: 11px;">' + parseFloat(delivery.price || 0).toFixed(2) + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; text-align: center; font-size: 11px;">' + (delivery.qty || 0) + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; text-align: right; font-size: 11px;">' + parseFloat(delivery.total || 0).toFixed(2) + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 4px 6px; font-size: 11px;">' + escapeHtml(delivery.datadesc || '') + '</td>' +
            '</tr>';
    }).join('');
    
    return '<table style="width: 100%; border-collapse: collapse; font-size: 11px; margin-top: 10px;">' +
        '<thead><tr>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Delivernum</th>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Code</th>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Title</th>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Price</th>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Qty</th>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Amount</th>' +
        '<th style="border: 1px solid #ddd; padding: 5px; background: #f8f9fa; font-size: 11px; text-align: left;">Type</th>' +
        '</tr></thead>' +
        '<tbody>' + tableRows + '</tbody>' +
        '</table>';
}

// Filter table based on search input
function filterTable() {
    var searchInput = document.getElementById('searchInput');
    if (!searchInput) return;
    
    var searchValue = searchInput.value.toLowerCase();
    var table = document.getElementById('deliveriesTable');
    if (!table) return;
    
    var tbody = table.getElementsByTagName('tbody')[0];
    var rows = tbody.getElementsByTagName('tr');
    
    var visibleCount = 0;
    var visibleTotal = 0;
    
    if (!deliveriesData || deliveriesData.length === 0) return;
    
    for (var i = 0; i < rows.length; i++) {
        var row = rows[i];
        if (row.cells.length === 1) continue;
        if (!deliveriesData[i]) continue;
        
        var delivery = deliveriesData[i];
        var total = parseFloat(delivery.total) || 0;
        
        var searchText = (
            (delivery.delivernum || '') + ' ' +
            (delivery.prename || '') + ' ' +
            (delivery.firstname || '') + ' ' +
            (delivery.lastname || '') + ' ' +
            (delivery.appttel || '') + ' ' +
            (delivery.apptaddr || '')
        ).toLowerCase();
        
        if (searchValue === '' || searchText.indexOf(searchValue) !== -1) {
            row.style.display = '';
            visibleCount++;
            visibleTotal += total;
        } else {
            row.style.display = 'none';
        }
    }
    
    document.getElementById('billCount').textContent = visibleCount;
    document.getElementById('totalAmount').textContent = visibleTotal.toLocaleString('th-TH', {
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
    });
}

// Load data immediately
(function() {
    try {
        deliveriesData = JSON.parse(decodeURIComponent('<%= encodeURIComponent(JSON.stringify(deliveries || [])) %>'));
        console.log('Data loaded:', deliveriesData.length, 'deliveries');
    } catch (e) {
        console.error('Error loading data:', e);
        deliveriesData = [];
    }
})();

// Initialize when DOM is ready
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM Ready');
        filterTable();
    });
} else {
    console.log('DOM Already Ready');
    filterTable();
}

// ========================================
// Export CSV Functions
// ========================================

// Convert date to dd/mm/yyyy format
function formatDateToDDMMYYYY(dateString) {
    if (!dateString) return '';
    
    var date = new Date(dateString);
    if (isNaN(date.getTime())) return dateString; // Return original if invalid
    
    var day = String(date.getDate()).padStart(2, '0');
    var month = String(date.getMonth() + 1).padStart(2, '0');
    var year = date.getFullYear();
    
    return day + '/' + month + '/' + year;
}

// Escape CSV field (handle commas, quotes, newlines)
function escapeCSVField(field) {
    if (field === null || field === undefined) return '';
    
    var str = String(field);
    // If contains comma, quote, or newline, wrap in quotes and escape existing quotes
    if (str.indexOf(',') !== -1 || str.indexOf('"') !== -1 || str.indexOf('\n') !== -1) {
        str = '"' + str.replace(/"/g, '""') + '"';
    }
    return str;
}

// Convert delivery data to CSV row (EgDeliver9 format)
function deliveryToCSVRow(delivery) {
    var fields = [
        formatDateToDDMMYYYY(delivery.workdate),        // WORKDATE
        delivery.worktime || '',                         // WORKTIME
        delivery.operator || '',                         // OPERATOR
        delivery.chkminute || '',                        // CHKMINUTE
        delivery.delivernum || '',                       // DELIVERNUM
        delivery.tohomenum || '',                        // TOHOMENUM
        delivery.timein || '',                           // TIMEIN
        delivery.timeout || '',                          // TIMEOUT
        delivery.buy || '',                              // BUY
        delivery.datatype || '',                         // DATATYPE
        delivery.datadesc || '',                         // DATADESC
        delivery.processtyp || '',                       // PROCESSTYP
        delivery.processdes || '',                       // PROCESSDES
        delivery.mediatype || '',                        // MEDIATYPE
        delivery.mediadesc || '',                        // MEDIADESC
        delivery.channel || '',                          // CHANNEL
        delivery.channeldes || '',                       // CHANNELDES
        delivery.paytype || '',                          // PAYTYPE
        delivery.paydesc || '',                          // PAYDESC
        delivery.paytype1 || '',                         // PAYTYPE1
        delivery.subpay1 || '',                          // SUBPAY1
        delivery.subpay2 || '',                          // SUBPAY2
        delivery.payment || '',                          // PAYMENT
        formatDateToDDMMYYYY(delivery.payday),          // PAYDAY
        delivery.cusbankno || '',                        // CUSBANKNO
        delivery.cusbankna || '',                        // CUSBANKNA
        delivery.cusbankbr || '',                        // CUSBANKBR
        delivery.cusbankac || '',                        // CUSBANKAC
        delivery.cusbankref || '',                       // CUSBANKREF
        delivery.credit || '',                           // CREDIT
        delivery.credittype || '',                       // CREDITTYPE
        delivery.creditdesc || '',                       // CREDITDESC
        delivery.creditno || '',                         // CREDITNO
        delivery.creditexpm || '',                       // CREDITEXPM
        delivery.creditexpy || '',                       // CREDITEXPY
        delivery.creditref || '',                        // CREDITREF
        delivery.last3digit || '',                       // LAST3DIGIT
        delivery.bankno || '',                           // BANKNO
        delivery.bankna || '',                           // BANKNA
        delivery.bankbr || '',                           // BANKBR
        delivery.bankac || '',                           // BANKAC
        delivery.bankref || '',                          // BANKREF
        delivery.shiptype || '',                         // SHIPTYPE
        delivery.shipdesc || '',                         // SHIPDESC
        delivery.customerid || '',                       // CUSTOMERID
        delivery.salerepid || '',                        // SALEREPID
        delivery.prename || '',                          // PRENAME
        delivery.firstname || '',                        // FIRSTNAME
        delivery.lastname || '',                         // LASTNAME
        delivery.code || '',                             // CODE
        delivery.title || '',                            // TITLE
        delivery.price || '',                            // PRICE
        delivery.qty || '',                              // QTY
        delivery.amount || '',                           // AMOUNT
        delivery.discount || '',                         // DISCOUNT
        delivery.total || '',                            // TOTAL
        delivery.mooban2 || '',                          // MOOBAN2 (Keyword)
        delivery.apptday || '',                          // APPTDAY
        formatDateToDDMMYYYY(delivery.apptdate),        // APPTDATE
        delivery.appttime || '',                         // APPTTIME
        delivery.appttime1 || '',                        // APPTTIME1
        delivery.appttime2 || '',                        // APPTTIME2
        delivery.apptperson || '',                       // APPTPERSON
        delivery.appttel || '',                          // APPTTEL
        delivery.apptaddr || '',                         // APPTADDR
        delivery.apptaddr1 || '',                        // APPTADDR1
        delivery.apptaddr2 || '',                        // APPTADDR2
        delivery.apptkwang || '',                        // APPTKWANG
        delivery.apptkate || '',                         // APPTKATE
        delivery.appttumbon || '',                       // APPTTUMBON
        delivery.apptampur || '',                        // APPTAMPUR
        delivery.apptprov || '',                         // APPTPROV
        delivery.apptzip || '',                          // APPTZIP
        delivery.apptremk1 || '',                        // APPTREMK1
        delivery.apptremk2 || '',                        // APPTREMK2
        delivery.aftdelical || '',                       // AFTDELICAL
        delivery.aftdeliti || '',                        // AFTDELITI
        formatDateToDDMMYYYY(delivery.aftdelida),       // AFTDELIDA
        delivery.autobrt9 || '',                         // AUTOBRT9
        formatDateToDDMMYYYY(delivery.autobrt9da),      // AUTOBRT9DA
        delivery.autobrt9ti || '',                       // AUTOBRT9TI
        delivery.autobrt9by || '',                       // AUTOBRT9BY
        delivery.deliver || '',                          // DELIVER
        delivery.deliverid || '',                        // DELIVERID
        formatDateToDDMMYYYY(delivery.deliverda),       // DELIVERDA
        delivery.deliverti || '',                        // DELIVERTI
        delivery.deliverby || '',                        // DELIVERBY
        delivery.receive || '',                          // RECEIVE
        formatDateToDDMMYYYY(delivery.receiveda),       // RECEIVEDA
        delivery.receiveti || '',                        // RECEIVETI
        delivery.receiveby || '',                        // RECEIVEBY
        delivery.update || '',                           // UPDATE
        formatDateToDDMMYYYY(delivery.updateda),        // UPDATEDA
        delivery.updateti || '',                         // UPDATETI
        delivery.updateby || '',                         // UPDATEBY
        delivery.finance || '',                          // FINANCE
        delivery.financetyp || '',                       // FINANCETYP
        delivery.financedes || '',                       // FINANCEDES
        formatDateToDDMMYYYY(delivery.financeda),       // FINANCEDA
        delivery.financeti || '',                        // FINANCETI
        delivery.financeby || '',                        // FINANCEBY
        delivery.prnorder || '',                         // PRNORDER
        formatDateToDDMMYYYY(delivery.prnorddate),      // PRNORDDATE
        delivery.prnordtime || '',                       // PRNORDTIME
        delivery.prnpick || '',                          // PRNPICK
        formatDateToDDMMYYYY(delivery.prnpicdate),      // PRNPICDATE
        delivery.prnpictime || '',                       // PRNPICTIME
        delivery.prnsticker || '',                       // PRNSTICKER
        formatDateToDDMMYYYY(delivery.prnstidate),      // PRNSTIDATE
        delivery.prnstitime || '',                       // PRNSTITIME
        delivery.prnfinan || '',                         // PRNFINAN
        formatDateToDDMMYYYY(delivery.prnfindate),      // PRNFINDATE
        delivery.prnfintime || '',                       // PRNFINTIME
        delivery.payflag || '',                          // PAYFLAG
        formatDateToDDMMYYYY(delivery.paydate),         // PAYDATE
        delivery.paytime || '',                          // PAYTIME
        delivery.delvflag || '',                         // DELVFLAG
        formatDateToDDMMYYYY(delivery.delvdate),        // DELVDATE
        delivery.delvtime || '',                         // DELVTIME
        delivery.taxinv || '',                           // TAXINV
        delivery.transfer || '',                         // TRANSFER
        delivery.scanflag || '',                         // SCANFLAG
        formatDateToDDMMYYYY(delivery.scandate),        // SCANDATE
        delivery.scantime || '',                         // SCANTIME
        delivery.scanby || '',                           // SCANBY
        delivery.feed || '',                             // FEED
        delivery.feedno || '',                           // FEEDNO
        delivery.feedback || '',                         // FEEDBACK
        delivery.feeddesc || '',                         // FEEDDESC
        formatDateToDDMMYYYY(delivery.feeddate),        // FEEDDATE
        delivery.feedtime || '',                         // FEEDTIME
        delivery.feedid || '',                           // FEEDID
        delivery.feedmemo || '',                         // FEEDMEMO
        delivery.weightloss || '',                       // WEIGHTLOSS
        delivery.weight || '',                           // WEIGHT
        delivery.remark1 || '',                          // REMARK1
        delivery.remark2 || '',                          // REMARK2
        delivery.statusid || '',                         // STATUSID
        delivery.statusdesc || '',                       // STATUSDESC
        delivery.finish || '',                           // FINISH
        delivery.mapstat || '',                          // MAPSTAT
        delivery.uniqueid || '',                         // UNIQUEID
        delivery.accprint || '',                         // ACCPRINT
        formatDateToDDMMYYYY(delivery.accprintd),       // ACCPRINTD
        delivery.accprintt || '',                        // ACCPRINTT
        delivery.nkprint || '',                          // NKPRINT
        formatDateToDDMMYYYY(delivery.nkprintd),        // NKPRINTD
        delivery.nkprintt || '',                         // NKPRINTT
        formatDateToDDMMYYYY(delivery.routedate),       // ROUTEDATE
        delivery.editno || '',                           // EDITNO
        delivery.editflag || '',                         // EDITFLAG
        delivery.cnflag || '',                           // CNFLAG
        delivery.emailaddr || '',                        // EMAILADDR
        delivery.followup || '',                         // FOLLOWUP
        delivery.followupdays || '',                     // FOLLOWUPDAYS
        delivery.symptom || '',                          // SYMPTOM
        delivery.urgency || ''                           // URGENCY
    ];
    
    return fields.map(escapeCSVField).join(',');
}

// Generate CSV header (EgDeliver9 format)
function getCSVHeader() {
    var headers = [
        'WORKDATE', 'WORKTIME', 'OPERATOR', 'CHKMINUTE', 'DELIVERNUM', 'TOHOMENUM', 'TIMEIN', 'TIMEOUT',
        'BUY', 'DATATYPE', 'DATADESC', 'PROCESSTYP', 'PROCESSDES', 'MEDIATYPE', 'MEDIADESC', 'CHANNEL',
        'CHANNELDES', 'PAYTYPE', 'PAYDESC', 'PAYTYPE1', 'SUBPAY1', 'SUBPAY2', 'PAYMENT', 'PAYDAY',
        'CUSBANKNO', 'CUSBANKNA', 'CUSBANKBR', 'CUSBANKAC', 'CUSBANKREF', 'CREDIT', 'CREDITTYPE',
        'CREDITDESC', 'CREDITNO', 'CREDITEXPM', 'CREDITEXPY', 'CREDITREF', 'LAST3DIGIT', 'BANKNO',
        'BANKNA', 'BANKBR', 'BANKAC', 'BANKREF', 'SHIPTYPE', 'SHIPDESC', 'CUSTOMERID', 'SALEREPID',
        'PRENAME', 'FIRSTNAME', 'LASTNAME', 'CODE', 'TITLE', 'PRICE', 'QTY', 'AMOUNT', 'DISCOUNT',
        'TOTAL', 'MOOBAN2', 'APPTDAY', 'APPTDATE', 'APPTTIME', 'APPTTIME1', 'APPTTIME2', 'APPTPERSON',
        'APPTTEL', 'APPTADDR', 'APPTADDR1', 'APPTADDR2', 'APPTKWANG', 'APPTKATE', 'APPTTUMBON',
        'APPTAMPUR', 'APPTPROV', 'APPTZIP', 'APPTREMK1', 'APPTREMK2', 'AFTDELICAL', 'AFTDELITI',
        'AFTDELIDA', 'AUTOBRT9', 'AUTOBRT9DA', 'AUTOBRT9TI', 'AUTOBRT9BY', 'DELIVER', 'DELIVERID',
        'DELIVERDA', 'DELIVERTI', 'DELIVERBY', 'RECEIVE', 'RECEIVEDA', 'RECEIVETI', 'RECEIVEBY',
        'UPDATE', 'UPDATEDA', 'UPDATETI', 'UPDATEBY', 'FINANCE', 'FINANCETYP', 'FINANCEDES',
        'FINANCEDA', 'FINANCETI', 'FINANCEBY', 'PRNORDER', 'PRNORDDATE', 'PRNORDTIME', 'PRNPICK',
        'PRNPICDATE', 'PRNPICTIME', 'PRNSTICKER', 'PRNSTIDATE', 'PRNSTITIME', 'PRNFINAN',
        'PRNFINDATE', 'PRNFINTIME', 'PAYFLAG', 'PAYDATE', 'PAYTIME', 'DELVFLAG', 'DELVDATE',
        'DELVTIME', 'TAXINV', 'TRANSFER', 'SCANFLAG', 'SCANDATE', 'SCANTIME', 'SCANBY', 'FEED',
        'FEEDNO', 'FEEDBACK', 'FEEDDESC', 'FEEDDATE', 'FEEDTIME', 'FEEDID', 'FEEDMEMO', 'WEIGHTLOSS',
        'WEIGHT', 'REMARK1', 'REMARK2', 'STATUSID', 'STATUSDESC', 'FINISH', 'MAPSTAT', 'UNIQUEID',
        'ACCPRINT', 'ACCPRINTD', 'ACCPRINTT', 'NKPRINT', 'NKPRINTD', 'NKPRINTT', 'ROUTEDATE',
        'EDITNO', 'EDITFLAG', 'CNFLAG', 'EMAILADDR', 'FOLLOWUP', 'FOLLOWUPDAYS', 'SYMPTOM', 'URGENCY'
    ];
    
    return headers.map(escapeCSVField).join(',');
}

// Download CSV file
function downloadCSV(csvContent, filename) {
    var BOM = '\uFEFF'; // UTF-8 BOM for Excel
    var blob = new Blob([BOM + csvContent], { type: 'text/csv;charset=utf-8;' });
    
    var link = document.createElement('a');
    if (link.download !== undefined) {
        var url = URL.createObjectURL(blob);
        link.setAttribute('href', url);
        link.setAttribute('download', filename);
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
}

// Export selected row (all items with same delivernum)
function exportSelectedRow() {
    if (!selectedDeliveryData) {
        alert('⚠️ กรุณาเลือกรายการจากตารางก่อน');
        return;
    }
    
    console.log('Exporting all rows with delivernum:', selectedDeliveryData.delivernum);
    
    // Find all deliveries with same delivernum
    var relatedDeliveries = deliveriesData.filter(function(d) {
        return d.delivernum === selectedDeliveryData.delivernum;
    });
    
    if (relatedDeliveries.length === 0) {
        alert('❌ ไม่พบข้อมูลที่เลือก');
        return;
    }
    
    var csvContent = getCSVHeader() + '\n';
    relatedDeliveries.forEach(function(delivery) {
        csvContent += deliveryToCSVRow(delivery) + '\n';
    });
    
    var filename = 'delivery_' + selectedDeliveryData.delivernum + '_' + new Date().getTime() + '.csv';
    downloadCSV(csvContent, filename);
    
    alert('✅ ส่งออกข้อมูลสำเร็จ!\nDelivernum: ' + selectedDeliveryData.delivernum + '\nพบ ' + relatedDeliveries.length + ' รายการ\nไฟล์: ' + filename);
}

// Preview data by date
function previewDateData() {
    var dateInput = document.getElementById('exportDateInput');
    var previewContainer = document.getElementById('datePreviewContainer');
    var previewTitle = document.getElementById('previewTitle');
    var tableBody = document.getElementById('datePreviewTableBody');
    
    if (!dateInput || !dateInput.value) {
        previewContainer.style.display = 'none';
        return;
    }
    
    var selectedDate = dateInput.value; // Format: YYYY-MM-DD
    console.log('Previewing date:', selectedDate);
    
    // Filter deliveries by apptdate (use local date comparison)
    var filteredDeliveries = deliveriesData.filter(function(delivery) {
        if (!delivery.apptdate) return false;
        
        // Convert apptdate to YYYY-MM-DD format using LOCAL time (not UTC)
        var apptDate = new Date(delivery.apptdate);
        if (isNaN(apptDate.getTime())) return false;
        
        var year = apptDate.getFullYear();
        var month = String(apptDate.getMonth() + 1).padStart(2, '0');
        var day = String(apptDate.getDate()).padStart(2, '0');
        var localDateString = year + '-' + month + '-' + day;
        
        return localDateString === selectedDate;
    });
    
    // Update preview title
    previewTitle.textContent = 'พบ ' + filteredDeliveries.length + ' รายการ ในวันที่ ' + formatDateToDDMMYYYY(selectedDate);
    
    // Generate table rows
    if (filteredDeliveries.length === 0) {
        tableBody.innerHTML = '<tr><td colspan="7" style="text-align: center; padding: 20px; color: #999;">ไม่พบข้อมูลในวันที่เลือก</td></tr>';
        previewContainer.style.display = 'block';
        return;
    }
    
    var rows = filteredDeliveries.map(function(delivery) {
        var customerName = ((delivery.prename || '') + ' ' + (delivery.firstname || '') + ' ' + (delivery.lastname || '')).trim();
        
        return '<tr style="background: white;">' +
            '<td style="border: 1px solid #ddd; padding: 5px;">' + (delivery.delivernum || '') + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 5px;">' + customerName + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 5px;">' + formatDateToDDMMYYYY(delivery.apptdate) + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 5px;">' + (delivery.title || '') + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 5px; text-align: right;">' + (delivery.qty || 0) + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 5px; text-align: right;">' + parseFloat(delivery.total || 0).toFixed(2) + '</td>' +
            '<td style="border: 1px solid #ddd; padding: 5px;">' + (delivery.datadesc || '') + '</td>' +
            '</tr>';
    }).join('');
    
    tableBody.innerHTML = rows;
    previewContainer.style.display = 'block';
}

// Export by date
function exportByDate() {
    var dateInput = document.getElementById('exportDateInput');
    if (!dateInput || !dateInput.value) {
        alert('⚠️ กรุณาเลือกวันที่ก่อน');
        return;
    }
    
    var selectedDate = dateInput.value; // Format: YYYY-MM-DD
    console.log('Exporting by date:', selectedDate);
    
    // Filter deliveries by apptdate (use local date comparison)
    var filteredDeliveries = deliveriesData.filter(function(delivery) {
        if (!delivery.apptdate) return false;
        
        // Convert apptdate to YYYY-MM-DD format using LOCAL time (not UTC)
        var apptDate = new Date(delivery.apptdate);
        if (isNaN(apptDate.getTime())) return false;
        
        var year = apptDate.getFullYear();
        var month = String(apptDate.getMonth() + 1).padStart(2, '0');
        var day = String(apptDate.getDate()).padStart(2, '0');
        var localDateString = year + '-' + month + '-' + day;
        
        return localDateString === selectedDate;
    });
    
    if (filteredDeliveries.length === 0) {
        alert('⚠️ ไม่พบข้อมูลในวันที่เลือก\n(' + formatDateToDDMMYYYY(selectedDate) + ')');
        return;
    }
    
    var csvContent = getCSVHeader() + '\n';
    filteredDeliveries.forEach(function(delivery) {
        csvContent += deliveryToCSVRow(delivery) + '\n';
    });
    
    var formattedDate = formatDateToDDMMYYYY(selectedDate).replace(/\//g, '-');
    var filename = 'deliveries_' + formattedDate + '_' + new Date().getTime() + '.csv';
    downloadCSV(csvContent, filename);
    
    alert('✅ ส่งออกข้อมูลสำเร็จ!\nพบ ' + filteredDeliveries.length + ' รายการ\nไฟล์: ' + filename);
}

// Download field mapping file
function downloadFieldMapping() {
    // Download CSV_EXPORT_MAPPING_SUMMARY.md
    var link = document.createElement('a');
    link.href = '/CSV_EXPORT_MAPPING_SUMMARY.md';
    link.download = 'CSV_EXPORT_MAPPING_SUMMARY.md';
    link.style.display = 'none';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    // Show success message
    alert('✅ กำลังดาวน์โหลดไฟล์\n📄 CSV_EXPORT_MAPPING_SUMMARY.md\n\nไฟล์นี้แสดงรายละเอียดครบถ้วนทั้ง 216 ฟิลด์');
}
</script>

<div class="dashboard-container">

<!-- Search and Summary Bar -->
<div class="search-summary-bar">
    <div class="search-box">
        <input type="text" id="searchInput" placeholder="ค้นหา Delivernum, ชื่อลูกค้า, เบอร์โทร..." onkeyup="filterTable()">
    </div>
    <div class="summary-info">
        <span class="summary-value" id="billCount"><%= deliveries.length %></span>
        <span>บิล</span>
        <span style="margin-left: 10px;">เป็นเงิน</span>
        <span class="summary-value" id="totalAmount"><%= parseFloat(summary.totalAmount || 0).toLocaleString('th-TH', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></span>
        <span>บาท</span>
    </div>
</div>

<!-- Data Table Section -->
<div class="data-table-section">
    <div style="max-height: 350px; overflow-y: auto;">
        <table id="deliveriesTable">
            <thead>
                <tr>
                    <th style="width: 50px;">ลำดับ</th>
                    <th style="width: 100px;">Delivernum</th>
                    <th style="width: 80px;">SaleID</th>
                    <th style="width: 200px;">ชื่อ-นามสกุล ลูกค้า</th>
                    <th style="width: 100px;">นัดส่งวันที่</th>
                    <th style="width: 80px;">เคยซื้อ</th>
                    <th style="width: 100px;">สื่อ</th>
                    <th style="width: 100px;">เป็นเงิน</th>
                    <th style="width: 120px;">วิธีส่งของ</th>
                    <th>สถานที่รับของสินค้า</th>
                </tr>
            </thead>
            <tbody>
                <% if (deliveries && deliveries.length > 0) { %>
                    <% deliveries.forEach(function(delivery, index) { %>
                        <tr onclick="selectRow(<%= index %>)">
                            <td style="text-align: center;"><%= delivery.id || '' %></td>
                            <td><span class="badge-small <%= 'badge-' + (String(delivery.mediadesc || 'default').replace(/\s/g, '').toUpperCase()) %>"><%= delivery.delivernum || '' %></span></td>
                            <td><strong><%= delivery.salerepid || '' %></strong></td>
                            <td><%= (delivery.prename || '') %> <%= (delivery.firstname || '') %> <%= (delivery.lastname || '') %></td>
                            <td><%= delivery.apptdate ? new Date(delivery.apptdate).toString().split(' GMT')[0] : '' %></td>
                            <td style="text-align: center;"><%= delivery.purchase_count || 0 %></td>
                            <td><%= delivery.mediadesc || '' %></td>
                            <td style="text-align: right;"><%= parseFloat(delivery.total || 0).toFixed(2) %></td>
                            <td><%= delivery.shipdesc || '' %></td>
                            <td class="text-truncate-td" title="<%= delivery.apptaddr || '' %>"><%= delivery.apptaddr || '' %></td>
                        </tr>
                    <% }); %>
                <% } else { %>
                    <tr>
                        <td colspan="10" style="text-align: center; padding: 20px;">ไม่พบข้อมูล</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>
</div>

<!-- Detail Form Section -->
<div class="detail-form-section" id="detailFormSection">
    <div id="detailContent">
        <div class="detail-layout">
            <!-- Left Column -->
            <div class="detail-left">
                <div class="form-field">
                    <label>อาการ :</label>
                    <input type="text" value="" readonly>
                </div>
                
                <div class="form-field">
                    <label>ระดับความปวด :</label>
                    <input type="text" value="" readonly>
                </div>
                
                <div class="form-field">
                    <label>Keyword :</label>
                    <input type="text" value="" readonly>
                </div>
                
                <div class="form-row-inline">
                    <div class="form-field">
                        <label>Follow Up :</label>
                        <input type="text" value="0" readonly style="width: 40px;">
                        <span style="font-size: 11px;">วัน</span>
                    </div>
                </div>
                
                <div class="form-row-inline">
                    <div class="form-field">
                        <label>วิธีทาน :</label>
                        <input type="text" value="0" readonly style="width: 40px;">
                    </div>
                </div>
                
                <div class="form-field">
                    <label>Remark1 :</label>
                    <input type="text" value="" readonly>
                </div>
                
                <div class="form-field">
                    <label>Remark2 :</label>
                    <input type="text" value="" readonly>
                </div>
                
                <div class="form-field">
                    <label>Channel :</label>
                    <input type="text" value="" readonly>
                </div>
            </div>
            
            <!-- Right Column -->
            <div class="detail-right">
                <!-- Top section with small fields -->
                <div class="detail-right-top">
                    <div style="display: flex; gap: 10px; margin-bottom: 8px; align-items: center;">
                        <div class="form-field-small">
                            <label>CustID :</label>
                            <input type="text" value="" readonly style="width: 120px;">
                        </div>
                        <div class="form-field" style="flex: 1;">
                            <label>ชื่อ-นามสกุล :</label>
                            <input type="text" value="" readonly>
                        </div>
                    </div>
                    <div style="display: flex; gap: 10px; align-items: center;">
                        <div class="form-field-small">
                            <label>เพศ :</label>
                            <input type="text" id="customerSex" value="" readonly>
                        </div>
                        <div class="form-field-small">
                            <label>อายุ :</label>
                            <input type="text" id="customerAge" value="" readonly>
                        </div>
                        <div class="form-field-small">
                            <label>น้ำหนัก :</label>
                            <input type="text" id="customerWeight" value="" readonly>
                            <span style="font-size: 10px;">กก.</span>
                        </div>
                        <div class="form-field-small">
                            <label>สูง :</label>
                            <input type="text" id="customerHeight" value="" readonly>
                            <span style="font-size: 10px;">ซม.</span>
                        </div>
                    </div>
                </div>
                
                <div class="form-field">
                    <label style="width: 100px;">โรคประจำตัว :</label>
                    <input type="text" id="customerSickness" value="" readonly>
                </div>
                
                <div class="form-field">
                    <label style="width: 100px;">Tag :</label>
                    <input type="text" value="" readonly>
                </div>
                
                <div class="form-field">
                    <label style="width: 100px;">LineID :</label>
                    <input type="text" id="customerLineId" value="" readonly>
                </div>
                
                <!-- Items Table -->
                <div id="relatedItemsContainer">
                    <p style="padding: 10px; text-align: center; color: #999;">เลือกรายการจากตารางด้านบนเพื่อดูรายละเอียด</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Export CSV Section -->
<div class="export-section" style="background: white; border: 1px solid #ddd; padding: 15px; margin: 15px 0; border-radius: 4px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
    <h3 style="margin: 0 0 15px 0; font-size: 14px; color: #333;">ส่งออกข้อมูล (Export CSV)</h3>
    
    <div style="display: flex; gap: 15px; align-items: flex-end;">
        <!-- Export Selected Button -->
        <div>
            <button id="exportSelectedBtn" onclick="exportSelectedRow()" style="padding: 8px 16px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 13px; font-weight: 500;">
                📥 ส่งออกรายการที่เลือก
            </button>
        </div>
        
        <!-- Export by Date -->
        <div style="display: flex; gap: 10px; align-items: flex-end;">
            <div>
                <label style="display: block; font-size: 12px; margin-bottom: 4px; font-weight: 500;">เลือกวันที่ (ApptDate):</label>
                <input type="date" id="exportDateInput" onchange="previewDateData()" style="padding: 6px 10px; border: 1px solid #ccc; border-radius: 3px; font-size: 13px;">
            </div>
            <button id="exportByDateBtn" onclick="exportByDate()" style="padding: 8px 16px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 13px; font-weight: 500;">
                📅 ส่งออกรายการตามวันที่
            </button>
            
            <!-- Field Mapping Info Button -->
            <button id="fieldMappingBtn" onclick="downloadFieldMapping()" style="padding: 8px 16px; background-color: #6c757d; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 13px; font-weight: 500; margin-left: 10px;">
                📥 ดาวน์โหลดคำอธิบายฟิลด์ทั้งหมด (216 ฟิลด์)
            </button>
        </div>
    </div>
    
    <!-- Preview Table Container -->
    <div id="datePreviewContainer" style="margin-top: 15px; display: none;">
        <div style="border-top: 1px solid #ddd; padding-top: 15px;">
            <h4 style="margin: 0 0 10px 0; font-size: 13px; color: #333;">
                <span id="previewTitle">ข้อมูลตัวอย่าง</span>
            </h4>
            <div style="max-height: 300px; overflow-y: auto; border: 1px solid #ddd; border-radius: 3px;">
                <table id="datePreviewTable" style="width: 100%; border-collapse: collapse; font-size: 11px;">
                    <thead style="background: #f8f9fa; position: sticky; top: 0;">
                        <tr>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: left;">Delivernum</th>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: left;">ชื่อลูกค้า</th>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: left;">วันที่นัดส่ง</th>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: left;">สินค้า</th>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: right;">จำนวน</th>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: right;">ยอดรวม</th>
                            <th style="border: 1px solid #ddd; padding: 6px; text-align: left;">Type</th>
                        </tr>
                    </thead>
                    <tbody id="datePreviewTableBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

</div>
